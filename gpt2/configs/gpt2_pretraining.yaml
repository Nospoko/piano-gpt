defaults:
  - model: gpt2 # "gpt2_minimal", "gpt2_medium", "gpt2_large", "gpt2_xl"
  - data: default
  - tokenizer: exponential
  - dataset: tokenized
  - lr: cosine_decay
  - optimizer: default
  - _self_

out_dir: 'tmp/checkpoints'
always_save_checkpoint: false  # if True, always save a checkpoint after each eval

eval_interval: 500
eval_iters: 100

init_from: 'scratch_next_token'  # 'scratch_next_token' or 'midi-gpt2*'
stage: next_token_pretraining
loss_masking: pretraining

ddp:
  backend: 'nccl'  # 'nccl', 'gloo', etc.

system:
  device: 'cuda'  # examples: 'cpu', 'cuda', 'cuda:0', 'cuda:1' etc., or try 'mps' on macbooks
  dtype: 'float16'  # 'float32', 'bfloat16', or 'float16', the latter will auto implement a GradScaler
  compile: true  # use PyTorch 2.0 to compile the model to be faster
  data_workers: 16

logging:
  wandb_log: True
  wandb_project: 'piano-gpt'
  wandb_time_suffix: ${now:%Y-%m-%d-%H-%M}
  wandb_run_name_suffix: pretraining
  log_interval: 20
